#!/usr/bin/env python3
'''
Wesnoth Site Status Service Stateful Support Survey Bot (codename Eidyia)

Copyright (C) 2023 by Iris Morelle <iris@irydacea.me>
See COPYING for use and distribution terms.
'''

import argparse
import asyncio
import logging
import sys

from src.eidyia.config import EidyiaConfig
from src.eidyia.core import EidyiaCore
from src.eidyia.discord_client import EidyiaDiscordClient
from src.valen.V1Report import Report as V1Report


# Default path to eidyia config
CONFIG_PATH = './eidyia.jsonc'

# Default path to valen report
REPORT_PATH = '../valen/valen.json'

# Report format name
REPORT_FORMAT = 'Valen V1'

log = logging.getLogger('main')


#
# Program entry point & stuff
#

def exit_error(msg: str):
    '''
    Reports an error and exits.
    '''
    log.error(msg)
    sys.exit(1)


def main():
    '''
    Application entry point.
    '''
    parser = argparse.ArgumentParser()
    parser.add_argument('-d, --debug', action='store_true', dest='debug',
                        default=False,
                        help='prints extra debugging information')
    parser.add_argument('-c', '--config', action='store', type=str, dest='config',
                        default=CONFIG_PATH,
                        help='specifies the path to the Eidyia configuration JSON file')
    parser.add_argument('-r', '--report', action='store', type=str, dest='report',
                        default=REPORT_PATH,
                        help='specifies the path to the Valen report JSON file')
    args = parser.parse_args()

    print(f'''codename "Eidyia" version {EidyiaCore.version}

    Config file path: {args.config}
    Report file path: {args.report}
       Report format: {REPORT_FORMAT}
''')

    min_log_level = logging.INFO if not args.debug else logging.DEBUG
    logging.basicConfig(format='[%(asctime)s %(name)s %(levelname)s] %(message)s',
                        datefmt='%Y-%m-%d %H:%M:%S',
                        level=min_log_level)
    for level in [logging.CRITICAL,
                  logging.ERROR,
                  logging.WARNING,
                  logging.INFO,
                  logging.DEBUG]:
        # Sorry, I just hate logging YELLING IN MY FACE ALL THE TIME
        logging.addLevelName(level, logging.getLevelName(level).lower())

    #
    # Read config file
    #
    config = None
    try:
        config = EidyiaConfig(args.config)
    except EidyiaConfig.FileError as err:
        exit_error(f'Could not read configuration from {args.config}:\n'
                   f'  {err}')
    except EidyiaConfig.ConfigError as err:
        exit_error(f'Incorrect configuration in {args.config}:\n'
                   f'  {err}')
    if not config.irc and not config.discord:
        exit_error('At least one client (Discord, IRC) must be configured. '
                   'Cannot continue.')

    #
    # Set up Eidyia and its client components
    #
    try:
        eidyia = EidyiaCore(args.report)
    except (V1Report.FileError, V1Report.FormatError) as err:
        exit_error(f'Could not read report from {args.report}: {err}')

    if config.discord:
        async def discord_client_coro():
            async with EidyiaDiscordClient(config) as discord_client:
                discord_client.subscribe()
                await discord_client.start()
        eidyia.add_task('DiscordClient', discord_client_coro())

    # Transfer control to the core, which will run forever
    eidyia.run()


if __name__ == '__main__':
    main()
